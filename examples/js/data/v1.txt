'use strict';

/*eslint-disable*/

var ScheduleList = [];

var SCHEDULE_CATEGORY = [
    'milestone',
    'task'
];

function ScheduleInfo() {
    this.id = null;
    this.calendarId = null;

    this.title = null;
    this.body = null;
    this.isAllday = false;
    this.start = null;
    this.end = null;
    this.category = '';
    // this.dueDateClass = '';

    // this.color = null;
    // this.bgColor = null;
    // this.dragBgColor = null;
    // this.borderColor = null;
    // this.customStyle = '';

    this.isVisible = true;
    this.isReadOnly = false;
    this.recurrenceRule = '';

}

// function generateTime(schedule, start2, end2, data) {

//     var i=0 , length = data.length;
//     for (; i < length; i ++) {
//         var startTest = moment(data[i].sessionEndDate);
//         var start2 = startTest.toDate();  
//         var endTest = moment(data[i].sessionDate);
//         var end2 = endTest.toDate();
        
//         schedule.isAllday = true;
//         schedule.start = start2;
//         schedule.end =  end2;
//         schedule.category = 'allday';

//         console.log('this is my 1 ' + start2);
//     }
//     // console.log('this is my 2 ' + end2);

// }

function generateNames() {
    return;
    var names = [];
    var i = 0;
    var length = chance.integer({min: 1, max: 10});

    for (; i < length; i += 1) {
        names.push(chance.name());
    }

    return names;
}

function generateRandomSchedule(calendar, renderStart, renderEnd) {
    return;
    var schedule = new ScheduleInfo();

    schedule.id = chance.guid();
    schedule.calendarId = calendar.id;

    schedule.title = chance.sentence({words: 3});
    schedule.body = chance.bool({likelihood: 20}) ? chance.sentence({words: 10}) : '';
    schedule.isReadOnly = chance.bool({likelihood: 20});
    generateTime(schedule, renderStart, renderEnd);

    schedule.isPrivate = chance.bool({likelihood: 10});
    schedule.location = chance.address();
    schedule.attendees = chance.bool({likelihood: 70}) ? generateNames() : [];
    schedule.recurrenceRule = chance.bool({likelihood: 20}) ? 'repeated events' : '';

    schedule.color = calendar.color;
    schedule.bgColor = calendar.bgColor;
    schedule.dragBgColor = calendar.dragBgColor;
    schedule.borderColor = calendar.borderColor;

    if (schedule.category === 'milestone') {
        schedule.color = schedule.bgColor;
        schedule.bgColor = 'transparent';
        schedule.dragBgColor = 'transparent';
        schedule.borderColor = 'transparent';
    }

    schedule.raw.memo = chance.sentence();
    schedule.raw.creator.name = chance.name();
    schedule.raw.creator.avatar = chance.avatar();
    schedule.raw.creator.company = chance.company();
    schedule.raw.creator.email = chance.email();
    schedule.raw.creator.phone = chance.phone();

    if (chance.bool({ likelihood: 20 })) {
        var travelTime = chance.minute();
        schedule.goingDuration = travelTime;
        schedule.comingDuration = travelTime;
    }

    ScheduleList.push(schedule);
}

function generateRandomSchedule1(calendar, start2, end2, title, body, location, data) {
    var schedule = new ScheduleInfo();

    // schedule.id = title;
    // schedule.calendarId = calendar.id;//<-- dont touch
    // schedule.calendarId = title;
    // schedule.calendarId = (calendar.id%2)+1;

    var i=0 , length = data.length;
    for (; i < length; i ++) {
        var startTest = moment(data[i].sessionEndDate);
        var start2 = startTest.toDate();  
        var endTest = moment(data[i].sessionDate);
        var end2 = endTest.toDate();
            
        schedule.title = data[i].firstName;
        schedule.body = body;
        schedule.isReadOnly = true;
        schedule.location = location;
        schedule.isAllday = true;
        schedule.start = start2;
        schedule.end =  end2;
        schedule.category = 'allday';

        console.log('this is my 1 ' + start2);
    }
    console.log('this is my 2 ' + start2);

    // generateTime(schedule, start2, end2, data);

    // schedule.start = renderStart;
    // schedule.end = renderEnd;

    // schedule.color = calendar.color;
    // schedule.bgColor = calendar.bgColor;
    // schedule.dragBgColor = calendar.dragBgColor;
    // schedule.borderColor = calendar.borderColor;

    // if (schedule.category === 'milestone') {
    //     schedule.color = schedule.bgColor;
    //     schedule.bgColor = 'transparent';
    //     schedule.dragBgColor = 'transparent';
    //     schedule.borderColor = 'transparent';
    // }

    ScheduleList.push(schedule);
    return schedule
}

// function generateSchedule(viewName, renderStart, renderEnd) {
//     ScheduleList = [];
//     CalendarList.forEach(function(calendar) {
//         var i = 0, length = 10;
//         if (viewName === 'month') {
//             length = 3;
//         } else if (viewName === 'day') {
//             length = 4;
//         }
//         for (; i < length; i += 1) {
//             generateRandomSchedule(calendar, renderStart, renderEnd);
//         }
//     });
// }
function generateSchedule(viewName, renderStart, renderEnd) {
    return;
    ScheduleList = [];
    CalendarList.forEach(function(calendar) {
        var i = 0, length = 10;
        if (viewName === 'month') {
            length = 3;
        } else if (viewName === 'day') {
            length = 4;
        }
        for (; i < length; i += 1) {
            let data = generateRandomSchedule1(calendar, renderStart, renderEnd);
        }
    });
}

function generateSchedule1(viewName, start2, end2, data) {
    ScheduleList = [];
    CalendarList.forEach(function(calendar, idx) {
        // console.log(idx)
        var i = 0, length = 50;
        if (viewName === 'month') {
            length = 3;
        } else if (viewName === 'day') {
            length = 4;
        }
        for (; i < length; i ++) {
            let retdata = generateRandomSchedule1(calendar, start2, end2, data[i].courseName, data[i].firstName,data[i].location, data);
            // retdata.title = data[0].courseName
        }
        /*
        for(let i=0;i<data.length;i++){
            for(let j=0;j<data[idx].length;j++){
                //javascript
                generateRandomSchedule1(calendar, renderStart, renderEnd, data[i][j].courseName, data[i][j].firstName);
            }
        }
        */
    });
    // console.log(data);
}